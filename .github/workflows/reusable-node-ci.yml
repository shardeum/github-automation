name: Shardeum Reusable CI Workflow for Node projects

# All variables must be set at the repo workflow call and provided to this shared/reusable workflow
on:
  issue_comment:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: string
      lint-required:
        required: true
        type: boolean
      format-check-required:
        required: true
        type: boolean
      apply-patches-required:
        required: true
        type: boolean
      unit-tests-required:
        required: true
        type: boolean
env:
  NODE_VERSION: ${{ inputs.node-version }}
  IS_LINT_REQUIRED: ${{ inputs.lint-required }}
  IS_FORMAT_CHECK_REQUIRED: ${{ inputs.format-check-required }}
  IS_APPLY_PATCHES_REQUIRED: ${{ inputs.apply-patches-required }}
  IS_UNIT_TESTS_REQUIRED: ${{ inputs.unit-tests-required }}
jobs:
  debug-info:
    runs-on: ubuntu-latest
    name: Display useful debugging information
    steps:
      - name: Display Event details
        run: |
          echo "Event Name:           ${{ github.event_name }}"
          echo "Event Action:         ${{ github.event.action }}"
          echo "Event Sender Type:    ${{ github.event.sender.type }}"
  pr_agent_job:
    name: Run pr agent on every pull request, respond to user comments
    runs-on: ubuntu-latest
    if: ${{ github.event.sender.type != 'Bot' }}
    permissions:
      issues: write
      pull-requests: write
      contents: write
    steps:
      - name: PR Agent action step
        id: pragent
        uses: Codium-ai/pr-agent@main
        env:
          OPENAI_KEY: ${{ secrets.OPENAI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          github_action_config.auto_review: "true" # enable auto review
          github_action_config.auto_describe: "false" # disable auto describe
          github_action_config.auto_improve: "false" # disable auto improve

  merge-checks:
    name: QA merge checks
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'issue_comment' }}
    permissions:
      contents: read
    steps:
#     https://github.com/actions/checkout
      - name: Checkout repository
        uses: actions/checkout@v4.1.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4.0.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Echo Input Values and Check Defaults
        run: |
          echo "*** Start - Check inputs in shared workflow ***"
          echo "Node Version - Var: ${{ vars.NODE_VERSION }} | Input: ${{ inputs.node-version }} | Env: ${{ env.NODE_VERSION }}"
          echo "Lint Required - Var: ${{ vars.IS_LINT_REQUIRED }} | Input: ${{ inputs.lint-required }} | Env: ${{ env.IS_LINT_REQUIRED }}"
          echo "Format Check Required - Var: ${{ vars.IS_FORMAT_CHECK_REQUIRED }} | Input: ${{ inputs.format-check-required }} | Env: ${{ env.IS_FORMAT_CHECK_REQUIRED }}"
          echo "Apply Patches Required - Var: ${{ vars.IS_APPLY_PATCHES_REQUIRED }} | Input: ${{ inputs.apply-patches-required }} | Env: ${{ env.IS_APPLY_PATCHES_REQUIRED }}"
          echo "Unit Tests Required - Var: ${{ vars.IS_UNIT_TESTS_REQUIRED }} | Input: ${{ inputs.unit-tests-required }} | Env: ${{ env.IS_UNIT_TESTS_REQUIRED }}"
          echo "*** End - Check inputs in shared workflow ***"

      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci --ignore-scripts
          echo "Dependency installation complete."
        continue-on-error: false

      - name: Lint
        id: lint
        run: |
          echo "Running Linter..."
          npm run lint
          echo "Running Linter complete."
        continue-on-error: true

      - name: Format check
        id: format_check
        run: |
          echo "Running format check..."
          npm run format-check
          echo "Format check complete."
        continue-on-error: true

      - name: Test apply patches
        id: test_apply_patches
        run: |
          set -e
          shopt -s nullglob
          patches=(*.patch)
          if [ ${#patches[@]} -eq 0 ]; then
            echo "No patches to test."
          else
            for patch in "${patches[@]}"; do
              echo "Testing $patch"
              git apply --check -v "$patch" || (echo "Failed to apply patch: $patch" && exit 1)
            done
            echo "All patches applied successfully."
          fi
        continue-on-error: true

      - name: Build
        id: build
        run: |
          echo "Building the code..."
          npm run build
          echo "Build complete."
        continue-on-error: false

      - name: Unit Tests
        id: unit_tests
        run: |
          echo "Running Unit Tests..."
          npm test
          echo "Unit Tests complete."
        continue-on-error: true

      - name: Check if any step failed
        id: check_failure
        run: |
          failed=false
          
          # Check Lint
          if [[ "${{ steps.lint.outcome }}" == "failure" ]]; then
            echo "ERROR! Step 'lint' has failed! Please expand the step output for more details."
            if ${{ env.IS_LINT_REQUIRED }}; then
              failed=true
            fi
          fi
          
          # Check Format Check
          if [[ "${{ steps.format_check.outcome }}" == "failure" ]]; then
            echo "ERROR! Step 'format_check' has failed!"
            if ${{ env.IS_FORMAT_CHECK_REQUIRED }}; then
              failed=true
            fi
          fi
          
          # Check Apply Patches
          if [[ "${{ steps.test_apply_patches.outcome }}" == "failure" ]]; then
            echo "ERROR! Step 'test_apply_patches' has failed!"
            if ${{ env.IS_APPLY_PATCHES_REQUIRED }}; then
              failed=true
            fi
          fi
          
          # Check Unit Tests
          if [[ "${{ steps.unit_tests.outcome }}" == "failure" ]]; then
            echo "ERROR! Step 'unit_tests' has failed!"
            if ${{ env.IS_UNIT_TESTS_REQUIRED }}; then
              failed=true
            fi
          fi
          
          if [ "$failed" == "true" ]; then
            echo "Please expand the failed step(s) for more details."
            exit 1
          fi
