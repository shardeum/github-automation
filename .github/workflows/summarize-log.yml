name: Summarize

on:
  workflow_call:
    inputs:
      job_name:
        required: true
        type: string
    secrets:
      github-token:
        required: true

permissions:
  issues: write
  pull-requests: write
  contents: write

jobs:
  post-comment:
    runs-on: ubuntu-latest
    steps:
      - name: Download logs artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.job_name }}-logs
          
      - name: List artifact contents
        run: ls -lR  # List all files and directories recursively

      - name: Summarize logs and post comment
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          LOGS=$(cat ${{ inputs.job_name }}-logs/*.txt | tr '\n' '\r')
          PROMPT="Summarize the following GitHub workflow logs:\r$LOGS"

          # Call Gemini API using curl
          SUMMARY=$(curl -s -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $GEMINI_API_KEY" -d "{\"prompt\": \"$PROMPT\"}" https://api.gemini.com/v1/completions)

          # Extract summary from Gemini response using jq
          SUMMARY=$(echo $SUMMARY | jq -r '.completions[0].text') 

          # Set the summary as an environment variable for the next step
          echo "SUMMARY=$SUMMARY" >> $GITHUB_ENV

      - name: Post PR comment OR Log summary
        # Use a conditional step to either post a comment or log the summary
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '${{ env.SUMMARY }}' 
            });
        env:
          SUMMARY: ${{ env.SUMMARY }}

      - name: Log summary (if not a pull request)
        # This step will run if it's NOT a pull request
        if: github.event_name != 'pull_request'
        run: 'echo "Workflow summary: ${{ env.SUMMARY }}" >> workflow_summary.log'
